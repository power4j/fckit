# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on:
  push:
    branches:
      - main
      - master
      - dev
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache local Maven repository
        uses: actions/cache@v4.2.0
        env:
          cache-name: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn -B clean compile -DskipTests=true --file pom.xml  -U
      - name: Test with Maven
        run: mvn -B test -DskipTests=false
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          # possibly other stuff
          token: ${{ secrets.CODECOV_ORG_TOKEN }}
          fail_ci_if_error: false  # or true if you want CI to fail when Codecov fails
